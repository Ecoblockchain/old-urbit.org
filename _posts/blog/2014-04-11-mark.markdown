---
layout: post
category: blog
author: ~hobmed-hinrym
title: Mark
date: 2014-4-11 18:35
---

Mark is Markdown from Mars. It’s a lightweight language for composing documents that hits a sweet spot between ASCII and a full-on general purpose publishing system. You’ll probably be satisfied writing your blog posts, emails, chat messages, tutorials, and forum comments in Mark. For anything more involved than that, you may want to look elsewhere in the Martian publishing stack.

If you don’t like newfangled formatting languages (who does?) and just want to pretend that Mark is Markdown, you can do that, with a few minor caveats that you probably won’t even notice. One, we don’t support nested lists. When was the last time you saw a nested list? Was it in a tax document? Nested lists mean significant indentation, and significant indentation, while cool, means A, your document grows towards the right margin, and B, your grammar isn’t context-free anymore. You know how we feel about growing towards the right margin around here, and to our minds, it doesn’t seem right to break out context-full parsers for such a piddling task as making your text look pretty.

Two, we also don’t do nested block quotes, at least not the way you’re used to. We kinda suspect that supporting email-style `> > nested quoted` text was the point in every Earth Markdown format’s growth where its authors gave up on their pristine, unambiguous, context-free specifications and broke out the Perl.

And three, we only give you one way to do headings: `#`. Not that there’s anything wrong with sticking `hep`s under your text, but we sorta like there to be one way to do things. (In a similar vein, if you want emphasis, the character to use is `*`. We flat-out ignore `_`.)

So that’s what we’ve taken out. Now what have we put in?

We have a new, vaguely Nock-ish way to specify markup: a `[` followed by one or more characters, then some more Mark, closed with a `]`. E.g.:

```
[> quoted text
  [> in nested quotes]
]
[`
block code
]
[* emph] [** double-emph] word[* emph]word
[# heading]
[- list item
  [- nested item]
  [- nested item
    [1. nested item]
    [2. nested item]
  ]
]
```

If you wanted, you could mark up your whole document this way. Note that indentation is insignificant in the above, so you could just as easily have written it all on one line with any of that whitespace replaced with a single '` `'.

Escaping is also pretty easy: just use `\\`. `\\` is a special character; it always causes the next character to be interpreted literally, regardless of whether it’s a special character or not. This even happens in code blocks.
